name: Deploy to EC2

on:
  push:
    branches: [main]
  workflow_dispatch: # Allows the workflow to be manually triggered from the GitHub Actions tab

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Node.js (adjust the version as needed)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.20"

      # Install dependencies and build the app
      - name: Install and Build
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: 5432
          DB_NAME: ${{ secrets.DB_NAME }}
          DATABASE_URL: postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
        run: |
          npm install --omit=dev --omit=optional
          cd database
          npx prisma db pull
          npx prisma generate
          cd ..
          npm run build
          # Copy environment file and static assets into standalone folder
          cp .env .next/standalone/
          mkdir -p .next/standalone/.next/static
          cp -r .next/static/* .next/standalone/.next/static/
          [ -d "public" ] && cp -r public .next/standalone/ || echo "No public folder"

      # Deploy via SSH to your EC2 instance using an action like appleboy/ssh-action
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ec2-user/rathburn-online
            pm2 stop rathburn-online || true
            pm2 delete rathburn-online || true
            git pull origin main
            npm install --omit=dev --omit=optional
            cd database && npx prisma db pull && npx prisma generate && cd ..
            npm run build
            cp .env .next/standalone/
            mkdir -p .next/standalone/.next/static
            cp -r .next/static/* .next/standalone/.next/static/
            if [ -d "public" ]; then cp -r public .next/standalone/; fi
            pm2 start ecosystem.config.js
            pm2 save
